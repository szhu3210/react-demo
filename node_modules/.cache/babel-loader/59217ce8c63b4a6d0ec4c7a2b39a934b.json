{"ast":null,"code":"import _classCallCheck from \"/Users/troy/Google Drive/241Yitu_Interview/line/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/troy/Google Drive/241Yitu_Interview/line/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/troy/Google Drive/241Yitu_Interview/line/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/troy/Google Drive/241Yitu_Interview/line/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/troy/Google Drive/241Yitu_Interview/line/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/troy/Google Drive/241Yitu_Interview/line/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Line(props) {\n  return React.createElement(\"line\", {\n    className: \"line\",\n    x1: props.x1,\n    y1: props.y1,\n    x2: props.x2,\n    y2: props.y2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  });\n}\n\nvar Canvas =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Canvas, _React$Component);\n\n  function Canvas() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Canvas);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Canvas)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderLines = function (lines) {\n      return lines.map(function (line, i) {\n        return _this.renderLine(i, line.x1, line.y1, line.x2, line.y2);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Canvas, [{\n    key: \"renderLine\",\n    value: function renderLine(i, x1, y1, x2, y2) {\n      return React.createElement(Line, {\n        key: i,\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"svg\", {\n        height: \"500\",\n        width: \"500\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, this.renderLines(this.props.lines)));\n    }\n  }]);\n\n  return Canvas;\n}(React.Component);\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(App, _React$Component2);\n\n  function App(props) {\n    var _this2;\n\n    _classCallCheck(this, App);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this2.state = {\n      points: [{\n        x: 0,\n        y: 0\n      }, {\n        x: 50,\n        y: 50\n      }, {\n        x: 40,\n        y: 170\n      }]\n    };\n\n    _this2.setState({\n      lines: _this2.generate_lines(_this2.state.points)\n    });\n\n    return _this2;\n  }\n\n  _createClass(App, [{\n    key: \"generate_lines\",\n    value: function generate_lines(points) {\n      var lines = [];\n      console.log(points);\n\n      for (var i = 0; i < points.length - 1; i++) {\n        lines.push({\n          x1: points[i].x,\n          y1: points[i].y,\n          x2: points[i + 1].x,\n          y2: points[i + 1].y\n        });\n      }\n\n      return lines;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state);\n      return React.createElement(Canvas, {\n        lines: this.state.lines,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/troy/Google Drive/241Yitu_Interview/line/src/index.js"],"names":["React","ReactDOM","Line","props","x1","y1","x2","y2","Canvas","renderLines","lines","map","line","i","renderLine","Component","App","state","points","x","y","setState","generate_lines","console","log","length","push","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nfunction Line(props) {\n  return (\n    <line\n      className=\"line\"\n      x1={props.x1}\n      y1={props.y1}\n      x2={props.x2}\n      y2={props.y2}/>\n  )\n}\n\nclass Canvas extends React.Component {\n\n  renderLine(i, x1, y1, x2, y2) {\n    return (\n      <Line\n        key={i}\n        x1={x1}\n        y1={y1}\n        x2={x2}\n        y2={y2}\n      />\n    );\n  }\n\n  renderLines = (lines) =>\n      lines.map((line, i) => {\n        return this.renderLine(i, line.x1, line.y1, line.x2, line.y2)\n      }\n    );\n\n  render() {\n    return (\n      <div>\n        <svg height=\"500\" width=\"500\">\n          {this.renderLines(this.props.lines)}\n        </svg>\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      points: [\n        {\n          x: 0,\n          y: 0,\n        },\n        {\n          x: 50,\n          y: 50,\n        },\n        {\n          x: 40,\n          y: 170,\n        },\n      ],\n    };\n    this.setState({\n      lines: this.generate_lines(this.state.points),\n    });\n  }\n\n  generate_lines(points) {\n\n    const lines = [];\n    console.log(points);\n\n    for (let i = 0; i < points.length-1; i++) {\n      lines.push({\n        x1: points[i].x,\n        y1: points[i].y,\n        x2: points[i+1].x,\n        y2: points[i+1].y,\n      })\n    }\n\n    return lines;\n  }\n\n  render() {\n\n    console.log(this.state);\n\n    return (\n      <Canvas lines={this.state.lines}/>\n    );\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n"]},"metadata":{},"sourceType":"module"}